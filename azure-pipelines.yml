variables:
  solution: '**/*.sln'
  buildConfiguration: 'Release'
  imgTage: '$(Build.BuildId)'
  projects: '**/*.csproj'

stages:
- stage: ServiceCICD
  displayName: Service CI/CD
  jobs:
  - job: BuildAndTestSolutionAndPublishBuildArtifacts
    displayName: Build and test solution, publish artifacts, and build and push Docker image
    pool: 'Hosted Ubuntu 1604'

    steps:
    - task: NuGetToolInstaller@0

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
        projects: $(projects)

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: $(projects)
        arguments: '--configuration $(BuildConfiguration) --no-restore'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: 'test'
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(BuildConfiguration) --no-restore'
        publishTestResults: true

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: $(projects)
        arguments: '--configuration $(BuildConfiguration) --no-build --output $(build.artifactstagingdirectory)'
        zipAfterPublish: false

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: $(projects)
        arguments: '--configuration $(BuildConfiguration) --no-build --output publish/'
        zipAfterPublish: false        

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Build Artifacts'
      inputs:
        path: $(build.artifactstagingdirectory)
        artifact: drop

    # - task: PublishBuildArtifacts@1
    #   displayName: 'Publish Build Artifacts'
    #   inputs:
    #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #     ArtifactName: 'drop'
    #     publishLocation: 'Container'


  - job: CreateDockerImage
    displayName: Create Docker image
    pool: 'Hosted Ubuntu 1604'
    dependsOn: BuildAndTestSolutionAndPublishBuildArtifacts

    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Build Artifacts'
      inputs:
        artifact: drop
        targetPath: '$(Pipeline.Workspace)/downloads' 
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'all'
    - task: Docker@2
      displayName: 'Docker build & push'
      inputs:
        containerRegistry: 'Lybecker Docker Hub'
        repository: 'anderslybecker/k8sfriendlyaspnetcore'
        command: 'buildAndPush'
        Dockerfile: 'src/SimpleDockerfile'
        buildContext: 'src/'
        tags: |
          $(imgTage)